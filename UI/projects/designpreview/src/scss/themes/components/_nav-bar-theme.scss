@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
	$color-config: mat.get-color-config($theme);

	$primary-palette: map.get($color-config, 'primary');
	$accent-palette: map.get($color-config, 'accent');

	.phd-nav-bar {
		background: mat.get-color-from-palette($primary-palette, 500);
		border-bottom: mat.get-color-from-palette($primary-palette, 50);
		color: mat.get-color-from-palette($primary-palette, '500-contrast');

		a, a:hover {
			color: mat.get-color-from-palette($primary-palette, '500-contrast');
		}
		
		.phd-page-separator {
			border-color: mat.get-color-from-palette($primary-palette, '500-contrast');
		}

		.phd-menu-bars {
			color: mat.get-color-from-palette($primary-palette, '500-contrast');
		}

		.phd-active-link-collapsed {
			background: mat.get-color-from-palette($primary-palette, 500);
		}
	}

	.phd-collapsable-menu {
		background: mat.get-color-from-palette($primary-palette, 500);

		a, a:hover {
			color: mat.get-color-from-palette($primary-palette, '500-contrast');
		}
	}
}

@mixin typography($theme) {
	$typography-config: mat.get-typography-config($theme);
	
	.phd-nav-bar {
		font-family: mat.font-family($typography-config);
	}

	.phd-collapsable-menu {
		font-family: mat.font-family($typography-config);
	}
}

@mixin theme($theme) {
	$color-config: mat.get-color-config($theme);
	@if $color-config != null {
		@include color($theme);
	}

	$typography-config: mat.get-typography-config($theme);
	@if $typography-config != null {
		@include typography($theme);
	}
}
parameters:
- name: configurations
  type: object
  default: 
  - dev
  displayName:

steps:
- task: NodeTool@0
  displayName: 'Set Node Version'
  inputs:
    versionSpec: '13.x'
- task: FileTransform@1
  displayName: 'Set Build Info'
  inputs:
    folderPath: 'UI/projects/$(module)/src/app'
    fileType: 'json'
    targetFiles: 'build.json'
- task: Npm@1
  displayName: Install Dependencies
  inputs:
    command: 'custom'
    workingDir: 'UI'
    customCommand: ci --also=dev
- ${{ if eq(variables['runTests'], true) }}:
  - task: Npm@1
    displayName: Run Unit Tests
    inputs:
      command: 'custom'
      workingDir: 'UI'
      customCommand: 'run test -- --project=$(module)'
- ${{ each configuration in parameters.configurations }}:
  - task: Npm@1
    displayName: Build ${{ configuration }}
    inputs:
      command: 'custom'
      workingDir: 'UI'
      ${{ if eq(configuration, 'dev') }}:
        customCommand: run build -- --project=$(module)
      ${{ if ne(configuration, 'dev') }}:
        customCommand: run build -- --project=$(module) --configuration=${{ configuration }}
  - task: PublishBuildArtifacts@1
    displayName: Publish ${{ configuration }}
    inputs:
      PathtoPublish: '$(build.sourcesDirectory)/UI/dist/$(module)'
      ArtifactName: 'Site\${{ configuration }}'
      publishLocation: 'Container'

- ${{ if eq(variables['runTests'], true) }}:
  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: 'test-results.trx'
      searchFolder: '$(build.sourcesDirectory)\UI\projects\$(module)\ClientApp'

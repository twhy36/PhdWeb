# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: $(BuildDefinitionName)_$(MajorVersion).$(MinorVersion).$(Rev:r)

#variables:
#  system_accesstoken: $(System.AccessToken)

pool: BUILD
resources:
  repositories:
  - repository: ThoWeb
    type: git
    name: ThoWeb
    ref: feature/upgrade-angular-from-10-to-14

jobs:
- job: SetVersion
  workspace:
    clean: all
  displayName: Set Package Version
  steps:
  - checkout: none
  - task: DownloadPackage@1
    inputs:
      packageType: 'npm'
      feed: '6d26cbbb-94e5-4db9-ac14-039e14cd6ff9/484bd538-a8f3-4ad5-a52d-e1c1d14f5e1f'
      view: 
      definition: '3e5b7c2c-56a9-4057-b683-ed855e9a599c'
      version: 'latest'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: InlinePowershell@1
    name: PS
    inputs:
      Script: |
        Param(
          [int]$major,
          [int]$minor,
          [string]$artifacts
        )
        
        [int]$prevMajor, [int]$prevMinor, [int]$prevBuild = (Get-Content -Raw -Path ("{0}/package/package.json" -f $artifacts) | ConvertFrom-Json).version.Split('.')
        
        if ($major -lt $prevMajor){
          throw "Cannot decrease package version"
        }
        
        if (($major -eq $prevMajor) -and ($minor -lt $prevMinor)) {
          throw "Cannot decrease package version"
        }
        
        if (($major -eq $prevMajor) -and ($minor -eq $prevMinor)){
          $packageVersion = "{0}.{1}.{2}" -f $major, $minor, ($prevBuild+1)
          Write-Host "##vso[task.setvariable variable=packageVersion;isOutput=true]"$packageVersion
        }else{
          $packageVersion = "{0}.{1}.0" -f $major, $minor
          Write-Host "##vso[task.setvariable variable=packageVersion;isOutput=true]"$packageVersion
        }
        Write-Host $packageVersion
      ScriptArguments: '-artifacts $(System.ArtifactsDirectory) -major $(MajorVersion) -minor $(MinorVersion)'
- job: Build
  dependsOn: SetVersion
  workspace:
    clean: resources
  variables:
    packageVersion: $[dependencies.SetVersion.outputs['PS.packageVersion']]
  steps:
  - checkout: self
  - task: NodeTool@0
    inputs:
      versionSpec: '16.10.x'
    displayName: 'Install Node.js'
  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: 'UI'
      customRegistry: 'useFeed'
      customFeed: '6d26cbbb-94e5-4db9-ac14-039e14cd6ff9/484bd538-a8f3-4ad5-a52d-e1c1d14f5e1f'
    displayName: 'install dependencies'
  - task: AngularCLI@1
    displayName: Run Unit Tests
    inputs:
      command: 'test'
      project: 'UI'
      arguments: '--project=phd-common'
      DisableAnalytics: false
  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: 'test-results.trx'
      searchFolder: '$(build.sourcesDirectory)\UI'
  - task: AngularCLI@0
    inputs:
      command: 'build'
      project: 'UI'
      arguments: '--project=phd-common'
      prod: false
      DisableAnalytics: false
    displayName: 'build phd-common'
  - task: SetJsonProperty@1
    inputs:
      JsonFile: 'UI/dist/phd-common/package.json'
      PropertyPath: 'version'
      PropertyValue: '$(packageVersion)'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)/UI/dist/phd-common'
      artifact: 'phd-common'
      publishLocation: 'pipeline'
    displayName: publish artifact

- ${{ if true }}:
  - job: THO
    displayName: Validate THO
    dependsOn:
    - Build
    - SetVersion
    variables:
      packageVersion: $[dependencies.SetVersion.outputs['PS.packageVersion']]
    steps:
    - checkout: ThoWeb
    - task: InlinePowershell@1
      displayName: Get Package Path
      inputs:
        Script: |
          Param(
            [string]$packageVersion,
            [string]$workspace
          )
          
          Write-Host "##vso[task.setvariable variable=packagePath]"$workspace"/phd-common/phcorp-phd-common-"$packageVersion".tgz"
        ScriptArguments: '-packageVersion $(packageVersion) -workspace $(System.ArtifactsDirectory)'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'phd-common'
        targetPath: '$(System.ArtifactsDirectory)/phd-common'
      displayName: download artifact
    - task: NodeTool@0
      displayName: Install Node.js
      inputs:
        versionSpec: '16.10.x'
    - task: Npm@1
      displayName: Pack phd-common
      inputs:
        command: 'custom'
        workingDir: '$(System.ArtifactsDirectory)/phd-common'
        customCommand: 'pack --ignore-scripts'
    - task: Npm@1
      displayName: Install dependencies
      inputs:
        command: 'install'
        workingDir: ''
    - task: Npm@1
      displayName: Install phd-common
      inputs:
        command: 'custom'
        customCommand: 'install $(packagePath)'
    - task: Npm@1
      displayName: Build THO
      inputs:
        command: 'custom'
        workingDir: ''
        customCommand: 'run build -- --configuration=develop'
- ${{ if false }}:
  - job: Publish
    dependsOn: Build
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'phd-common'
        targetPath: '$(System.ArtifactsDirectory)/phd-common'
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: '$(System.ArtifactsDirectory)/phd-common'
        customCommand: 'publish --ignore-scripts'
        customRegistry: 'useFeed'
        customFeed: '6d26cbbb-94e5-4db9-ac14-039e14cd6ff9/484bd538-a8f3-4ad5-a52d-e1c1d14f5e1f'
      displayName: 'npm publish'